<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.5.0&#10;">
  <partials/>
  <file path="Injector.php" generated-path="Injector.html" hash="919b489315e048828322cac6b792d11b" package="DI">
    <docblock line="0">
      <description>This file describes the Injector class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="DI"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <namespace-alias name="RuntimeException">\RuntimeException</namespace-alias>
    <namespace-alias name="ReflectionClass">\ReflectionClass</namespace-alias>
    <namespace-alias name="ReflectionFunction">\ReflectionFunction</namespace-alias>
    <namespace-alias name="ReflectionFunctionAbstract">\ReflectionFunctionAbstract</namespace-alias>
    <class final="false" abstract="false" namespace="DI" line="19" package="DI">
      <extends/>
      <name>Injector</name>
      <full_name>\DI\Injector</full_name>
      <docblock line="19">
        <description>The injector class deals with dependency management as well as object creation and function context invocation.</description>
        <long-description></long-description>
        <tag name="api" line="19" description=""/>
        <tag name="see" line="19" description="Code coverage report" link="\DI\http://lord2800.github.io/di.php/coverage/"/>
        <tag name="package" line="19" description="DI"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="96" package="DI">
        <name>__construct</name>
        <full_name>\DI\Injector::__construct()</full_name>
        <docblock line="96">
          <description>Create an injector to resolve and create instances of dependencies</description>
          <long-description></long-description>
          <tag name="api" line="96" description=""/>
          <tag name="param" line="96" description="&lt;p&gt;optional Parent injector instance&lt;/p&gt;" type="\DI\Injector" variable="$parent">
            <type>\DI\Injector</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parent</name>
          <default>null</default>
          <type>\DI\Injector</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="106" package="DI">
        <name>provide</name>
        <full_name>\DI\Injector::provide()</full_name>
        <docblock line="106">
          <description>Provide a dependency to the injector. You may make use of the dependency either by classname (of the object) or
by the provided name (in the case of a closure)</description>
          <long-description></long-description>
          <tag name="api" line="106" description=""/>
          <tag name="param" line="106" description="&lt;p&gt;The name of the dependency being provided&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="106" description="&lt;p&gt;The actual object backing the dependency (which may be a closure)&lt;/p&gt;" type="mixed" variable="$obj">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="106" description="If the provided dependency name or class already exists" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="131" package="DI">
        <name>retrieve</name>
        <full_name>\DI\Injector::retrieve()</full_name>
        <docblock line="131">
          <description>Fetch a dependency provided to the injector.</description>
          <long-description></long-description>
          <tag name="param" line="131" description="&lt;p&gt;The name of the dependency to retrieve&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="131" description="The dependency, or null if not found" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="147" package="DI">
        <name>delegate</name>
        <full_name>\DI\Injector::delegate()</full_name>
        <docblock line="147">
          <description>Configure or replace an instance with an API-compatible instance</description>
          <long-description></long-description>
          <tag name="param" line="147" description="&lt;p&gt;The class or instance name to delegate&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="147" description="&lt;p&gt;A callable that will be invoked with the current instance&lt;/p&gt;" type="callable" variable="$closure">
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="166" package="DI">
        <name>inject</name>
        <full_name>\DI\Injector::inject()</full_name>
        <docblock line="166">
          <description>Inject a function and return a closure that will invoke the injected function</description>
          <long-description></long-description>
          <tag name="param" line="166" description="&lt;p&gt;The closure to inject dependencies into&lt;/p&gt;" type="callable" variable="$closure">
            <type>callable</type>
          </tag>
          <tag name="return" line="166" description="A no-argument function that will invoke the closure with its' dependencies" type="\DI\Closure">
            <type>\DI\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="191" package="DI">
        <name>instance</name>
        <full_name>\DI\Injector::instance()</full_name>
        <docblock line="191">
          <description>Get an instance of the specified class</description>
          <long-description></long-description>
          <tag name="param" line="191" description="&lt;p&gt;The name of the class (either full or partial) to look up&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="191" description="&lt;p&gt;The list of namespaces to try and retrieve the class from&lt;/p&gt;" type="string[]" variable="$namespaces">
            <type>string[]</type>
          </tag>
          <tag name="return" line="191" description="The singleton instance of the specified class" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespaces</name>
          <default>array()</default>
          <type>string[]</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="209" package="DI">
        <name>create</name>
        <full_name>\DI\Injector::create()</full_name>
        <docblock line="209">
          <description>Create a new instance of the specified class</description>
          <long-description></long-description>
          <tag name="see" line="209" description="" link="\DI\get"/>
          <tag name="param" line="209" description="&lt;p&gt;The name of the class (either full or partial) to look up&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="209" description="&lt;p&gt;The list of namespaces to try and retrieve the class from&lt;/p&gt;" type="string[]" variable="$namespaces">
            <type>string[]</type>
          </tag>
          <tag name="return" line="209" description="The instance of the specified class" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespaces</name>
          <default>array()</default>
          <type>string[]</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="55">walk the dependency list, see if any of the objects matches a class or interface of the required object</todo>
    </markers>
    <source>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</source>
  </file>
  <package name="DI" full_name="DI"/>
  <package name="global" full_name="global"/>
  <namespace name="DI" full_name="DI"/>
  <deprecated count="0"/>
</project>
