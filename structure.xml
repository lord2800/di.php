<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.2.0&#10;">
  <partials/>
  <file path="Injector.php" generated-path="Injector.html" hash="d57535a91e66e583461758e77cdc087b" package="DI">
    <docblock line="0">
      <description>This file describes the Injector class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="DI"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="DI" line="19" package="DI">
      <extends/>
      <name>Injector</name>
      <full_name>\DI\Injector</full_name>
      <docblock line="19">
        <description>The injector class deals with dependency management as well as object creation and function context invocation.</description>
        <long-description></long-description>
        <tag name="api" line="19" description=""/>
        <tag name="see" line="19" description="Code coverage report" link="\DI\http://lord2800.github.io/di.php/coverage/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="89" package="DI">
        <name>provide</name>
        <full_name>\DI\Injector::provide()</full_name>
        <docblock line="89">
          <description>Provide a dependency to the injector. You may make use of the dependency either by classname (of the object) or
by the provided name (in the case of a closure)</description>
          <long-description></long-description>
          <tag name="api" line="89" description=""/>
          <tag name="param" line="89" description="&lt;p&gt;The name of the dependency being provided&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="89" description="&lt;p&gt;The actual object backing the dependency (which may be a closure)&lt;/p&gt;" type="mixed" variable="$obj">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="89" description="If the provided dependency name or class already exists" type="\RuntimeException">
            <type link="RuntimeException.html">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="114" package="DI">
        <name>retrieve</name>
        <full_name>\DI\Injector::retrieve()</full_name>
        <docblock line="114">
          <description>Fetch a dependency provided to the injector.</description>
          <long-description></long-description>
          <tag name="param" line="114" description="&lt;p&gt;The name of the dependency to retrieve&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="114" description="The dependency, or null if not found" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="130" package="DI">
        <name>delegate</name>
        <full_name>\DI\Injector::delegate()</full_name>
        <docblock line="130">
          <description>Configure or replace an instance with an API-compatible instance</description>
          <long-description></long-description>
          <tag name="param" line="130" description="&lt;p&gt;The class or instance name to delegate&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="130" description="&lt;p&gt;A callable that will be invoked with the current instance&lt;/p&gt;" type="callable" variable="$closure">
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="149" package="DI">
        <name>inject</name>
        <full_name>\DI\Injector::inject()</full_name>
        <docblock line="149">
          <description>Inject a function and return a closure that will invoke the injected function</description>
          <long-description></long-description>
          <tag name="param" line="149" description="&lt;p&gt;The closure to inject dependencies into&lt;/p&gt;" type="callable" variable="$closure">
            <type>callable</type>
          </tag>
          <tag name="return" line="149" description="A no-argument function that will invoke the closure with its' dependencies" type="\DI\Closure">
            <type link="Closure.html">\DI\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="174" package="DI">
        <name>instance</name>
        <full_name>\DI\Injector::instance()</full_name>
        <docblock line="174">
          <description>Get an instance of the specified class</description>
          <long-description></long-description>
          <tag name="param" line="174" description="&lt;p&gt;The name of the class (either full or partial) to look up&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="174" description="&lt;p&gt;The list of namespaces to try and retrieve the class from&lt;/p&gt;" type="string[]" variable="$namespaces">
            <type>string[]</type>
          </tag>
          <tag name="return" line="174" description="The singleton instance of the specified class" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespaces</name>
          <default>array()</default>
          <type>string[]</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="192" package="DI">
        <name>create</name>
        <full_name>\DI\Injector::create()</full_name>
        <docblock line="192">
          <description>Create a new instance of the specified class</description>
          <long-description></long-description>
          <tag name="see" line="192" description="" link="\DI\get"/>
          <tag name="param" line="192" description="&lt;p&gt;The name of the class (either full or partial) to look up&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="192" description="&lt;p&gt;The list of namespaces to try and retrieve the class from&lt;/p&gt;" type="string[]" variable="$namespaces">
            <type>string[]</type>
          </tag>
          <tag name="return" line="192" description="The instance of the specified class" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespaces</name>
          <default>array()</default>
          <type>string[]</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="55">walk the dependency list, see if any of the objects matches a class or interface of the required object</todo>
    </markers>
    <source>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</source>
  </file>
  <package name="DI" full_name="DI"/>
  <namespace name="DI" full_name="DI"/>
  <deprecated count="0"/>
</project>
