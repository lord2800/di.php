<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.2.0&#10;">
  <partials/>
  <file path="Injector.php" generated-path="Injector.html" hash="06250b8f7883027effd071327c9b6c49" package="DI">
    <docblock line="0">
      <description>This file describes the Injector class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="DI"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="DI" line="19" package="DI">
      <extends/>
      <name>Injector</name>
      <full_name>\DI\Injector</full_name>
      <docblock line="19">
        <description>The injector class deals with dependency management as well as object creation and function context invocation.</description>
        <long-description></long-description>
        <tag name="api" line="19" description=""/>
        <tag name="see" line="19" description="Code coverage report" link="\DI\http://lord2800.github.io/di.php/coverage/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="91" package="DI">
        <name>provide</name>
        <full_name>\DI\Injector::provide()</full_name>
        <docblock line="91">
          <description>Provide a dependency to the injector. You may make use of the dependency either by classname (of the object) or
by the provided name (in the case of a closure)</description>
          <long-description></long-description>
          <tag name="api" line="91" description=""/>
          <tag name="param" line="91" description="&lt;p&gt;The name of the dependency being provided&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The actual object backing the dependency (which may be a closure)&lt;/p&gt;" type="mixed" variable="$obj">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="91" description="If the provided dependency name or class already exists" type="\RuntimeException">
            <type link="RuntimeException.html">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="116" package="DI">
        <name>retrieve</name>
        <full_name>\DI\Injector::retrieve()</full_name>
        <docblock line="116">
          <description>Fetch a dependency provided to the injector.</description>
          <long-description></long-description>
          <tag name="param" line="116" description="&lt;p&gt;The name of the dependency to retrieve&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="116" description="The dependency, or null if not found" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="132" package="DI">
        <name>delegate</name>
        <full_name>\DI\Injector::delegate()</full_name>
        <docblock line="132">
          <description>Configure or replace an instance with an API-compatible instance</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;The class or instance name to delegate&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="132" description="&lt;p&gt;A callable that will be invoked with the current instance&lt;/p&gt;" type="callable" variable="$closure">
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="151" package="DI">
        <name>inject</name>
        <full_name>\DI\Injector::inject()</full_name>
        <docblock line="151">
          <description>Inject a function and return a closure that will invoke the injected function</description>
          <long-description></long-description>
          <tag name="param" line="151" description="&lt;p&gt;The closure to inject dependencies into&lt;/p&gt;" type="callable" variable="$closure">
            <type>callable</type>
          </tag>
          <tag name="return" line="151" description="A no-argument function that will invoke the closure with its' dependencies" type="\DI\Closure">
            <type link="Closure.html">\DI\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="176" package="DI">
        <name>instance</name>
        <full_name>\DI\Injector::instance()</full_name>
        <docblock line="176">
          <description>Get an instance of the specified class</description>
          <long-description></long-description>
          <tag name="param" line="176" description="&lt;p&gt;The name of the class (either full or partial) to look up&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="176" description="&lt;p&gt;The list of namespaces to try and retrieve the class from&lt;/p&gt;" type="string[]" variable="$namespaces">
            <type>string[]</type>
          </tag>
          <tag name="return" line="176" description="The singleton instance of the specified class" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespaces</name>
          <default>array()</default>
          <type>string[]</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="194" package="DI">
        <name>create</name>
        <full_name>\DI\Injector::create()</full_name>
        <docblock line="194">
          <description>Create a new instance of the specified class</description>
          <long-description></long-description>
          <tag name="see" line="194" description="" link="\DI\get"/>
          <tag name="param" line="194" description="&lt;p&gt;The name of the class (either full or partial) to look up&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="194" description="&lt;p&gt;The list of namespaces to try and retrieve the class from&lt;/p&gt;" type="string[]" variable="$namespaces">
            <type>string[]</type>
          </tag>
          <tag name="return" line="194" description="The instance of the specified class" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespaces</name>
          <default>array()</default>
          <type>string[]</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="55">walk the dependency list, see if any of the objects matches a class or interface of the required object</todo>
    </markers>
    <source>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</source>
  </file>
  <package name="DI" full_name="DI"/>
  <namespace name="DI" full_name="DI"/>
  <deprecated count="0"/>
</project>
