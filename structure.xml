<?xml version="1.0" encoding="utf-8"?>
<project title="API Documentation" version="2.2.0&#10;">
  <partials/>
  <file path="Injector.php" generated-path="Injector.html" hash="1003af93f4490083bab951cff41350d6" package="DI">
    <docblock line="0">
      <description>This file describes the Injector class</description>
      <long-description></long-description>
      <tag name="package" line="0" description="DI"/>
      <tag name="license" line="0" description="MIT" link="http://opensource.org/licenses/MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="DI" line="19" package="DI">
      <extends/>
      <name>Injector</name>
      <full_name>\DI\Injector</full_name>
      <docblock line="19">
        <description>The injector class deals with dependency management as well as object creation and function context invocation.</description>
        <long-description></long-description>
        <tag name="api" line="19" description=""/>
        <tag name="see" line="19" description="Code coverage report" link="\DI\http://lord2800.github.io/di.php/coverage/"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="91" package="DI">
        <name>provide</name>
        <full_name>\DI\Injector::provide()</full_name>
        <docblock line="91">
          <description>Provide a dependency to the injector. You may make use of the dependency either by classname (of the object) or
by the provided name (in the case of a closure)</description>
          <long-description></long-description>
          <tag name="api" line="91" description=""/>
          <tag name="param" line="91" description="&lt;p&gt;The name of the dependency being provided&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="91" description="&lt;p&gt;The actual object backing the dependency (which may be a closure)&lt;/p&gt;" type="mixed" variable="$obj">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="91" description="If the provided dependency name or class already exists" type="\RuntimeException">
            <type link="RuntimeException.html">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="116" package="DI">
        <name>retrieve</name>
        <full_name>\DI\Injector::retrieve()</full_name>
        <docblock line="116">
          <description>Fetch a dependency provided to the injector.</description>
          <long-description></long-description>
          <tag name="param" line="116" description="&lt;p&gt;The name of the dependency to retrieve&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="116" description="The dependency, or null if not found" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="132" package="DI">
        <name>delegate</name>
        <full_name>\DI\Injector::delegate()</full_name>
        <docblock line="132">
          <description>Configure or replace an instance with an API-compatible instance</description>
          <long-description></long-description>
          <tag name="param" line="132" description="&lt;p&gt;The class or instance name to delegate&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="132" description="&lt;p&gt;A callable that will be invoked with the current instance&lt;/p&gt;" type="callable" variable="$closure">
            <type>callable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="151" package="DI">
        <name>inject</name>
        <full_name>\DI\Injector::inject()</full_name>
        <docblock line="151">
          <description>Inject a function and return a closure that will invoke the injected function</description>
          <long-description></long-description>
          <tag name="param" line="151" description="&lt;p&gt;The closure to inject dependencies into&lt;/p&gt;" type="callable" variable="$closure">
            <type>callable</type>
          </tag>
          <tag name="return" line="151" description="A no-argument function that will invoke the closure with its' dependencies" type="\DI\Closure">
            <type link="Closure.html">\DI\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="176" package="DI">
        <name>instance</name>
        <full_name>\DI\Injector::instance()</full_name>
        <docblock line="176">
          <description>Get an instance of the specified class</description>
          <long-description></long-description>
          <tag name="param" line="176" description="&lt;p&gt;The name of the class (either full or partial) to look up&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="176" description="&lt;p&gt;The list of namespaces to try and retrieve the class from&lt;/p&gt;" type="string[]" variable="$namespaces">
            <type>string[]</type>
          </tag>
          <tag name="return" line="176" description="The singleton instance of the specified class" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespaces</name>
          <default>array()</default>
          <type>string[]</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="DI" line="194" package="DI">
        <name>create</name>
        <full_name>\DI\Injector::create()</full_name>
        <docblock line="194">
          <description>Create a new instance of the specified class</description>
          <long-description></long-description>
          <tag name="see" line="194" description="" link="\DI\get"/>
          <tag name="param" line="194" description="&lt;p&gt;The name of the class (either full or partial) to look up&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="param" line="194" description="&lt;p&gt;The list of namespaces to try and retrieve the class from&lt;/p&gt;" type="string[]" variable="$namespaces">
            <type>string[]</type>
          </tag>
          <tag name="return" line="194" description="The instance of the specified class" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$namespaces</name>
          <default>array()</default>
          <type>string[]</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="55">walk the dependency list, see if any of the objects matches a class or interface of the required object</todo>
    </markers>
    <source>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</source>
  </file>
  <package name="DI" full_name="DI"/>
  <namespace name="DI" full_name="DI"/>
  <deprecated count="0"/>
</project>
